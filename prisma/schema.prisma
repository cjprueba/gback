// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// oc port-forward pod/postgresql 5432:5432 -n lfuentes-dev
// oc port-forward svc/postgresql 15432:5432 -n lfuentes-dev

/*
Eliminar y volver a cargar base de datos 
# eliminar migrations
# npx prisma migrate reset
# npx prisma migrate dev --name add_unidad_division_relation - para agregar nombre a la modificacion
npx prisma db seed
*/
// para correr prisma - npx prisma migrate dev --name init


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model usuarios {
  id                         Int                  @id @default(autoincrement())
  nombre_completo            String?              @db.VarChar(100)
  correo_electronico         String?              @unique @db.VarChar(100)
  perfil_id                  Int
  division_id                Int?
  departamento_id            Int?
  unidad_id                  Int?
  activo                     Boolean              @default(true)
  created_at                 DateTime             @default(now())
  alertas_asignadas          alertas[]            @relation("UsuarioAsignadoAlerta")
  alertas_creadas            alertas[]            @relation("UsuarioCreadorAlerta")
  archivo_historial_creado   archivo_historial[]
  auditorias_realizadas      auditorias[]
  carpetas_creadas           carpetas[]
  carpetas_auditoria_creadas carpetas_auditoria[]
  documentos_subidos         documentos[]         @relation("UsuarioSubidor")
  documentos_creados         documentos[]         @relation("UsuarioCreador")
  etapas_asignadas           etapas_registro[]    @relation("InspectorFiscal")
  etapas_creadas             etapas_registro[]    @relation("UsuarioCreadorEtapa")
  inspector_fiscal_asignado  inspector_fiscal[]
  proyectos_creados          proyectos[]          @relation("UsuarioCreador")
  versiones_creadas          documento_versiones[] @relation("UsuarioCreadorVersion")
  departamento               departamentos?       @relation(fields: [departamento_id], references: [id])
  division                   divisiones?          @relation(fields: [division_id], references: [id])
  perfil                     perfiles             @relation(fields: [perfil_id], references: [id])
  unidad                     unidades?            @relation(fields: [unidad_id], references: [id])
}

model perfiles {
  id          Int        @id @default(autoincrement())
  nombre      String     @db.VarChar(50)
  descripcion String?
  usuarios    usuarios[]
}

model divisiones {
  id            Int             @id @default(autoincrement())
  nombre        String          @db.VarChar(100)
  descripcion   String?
  activa        Boolean         @default(true)
  created_at    DateTime        @default(now())
  departamentos departamentos[]
  proyectos     proyectos[]
  unidades      unidades[]
  usuarios      usuarios[]
}

model departamentos {
  id          Int         @id @default(autoincrement())
  nombre      String      @db.VarChar(100)
  descripcion String?
  division_id Int
  activo      Boolean     @default(true)
  created_at  DateTime    @default(now())
  division    divisiones  @relation(fields: [division_id], references: [id])
  proyectos   proyectos[]
  unidades    unidades[]
  usuarios    usuarios[]
}

model unidades {
  id              Int           @id @default(autoincrement())
  nombre          String        @db.VarChar(100)
  descripcion     String?
  departamento_id Int
  activa          Boolean       @default(true)
  created_at      DateTime      @default(now())
  division_id     Int
  proyectos       proyectos[]
  departamento    departamentos @relation(fields: [departamento_id], references: [id])
  division        divisiones    @relation(fields: [division_id], references: [id])
  usuarios        usuarios[]
}

model etapas_tipo {
  id                                Int                      @id @default(autoincrement())
  nombre                            String                   @db.VarChar(100)
  descripcion                       String?
  tipo_iniciativa                   Boolean                  @default(false)
  tipo_obra                         Boolean                  @default(false)
  region                            Boolean                  @default(false)
  provincia                         Boolean                  @default(false)
  comuna                            Boolean                  @default(false)
  volumen                           Boolean                  @default(false)
  presupuesto_oficial               Boolean                  @default(false)
  fecha_llamado_licitacion          Boolean                  @default(false)
  fecha_recepcion_ofertas_tecnicas  Boolean                  @default(false)
  fecha_apertura_ofertas_economicas Boolean                  @default(false)
  fecha_inicio_concesion            Boolean                  @default(false)
  decreto_adjudicacion              Boolean                  @default(false)
  sociedad_concesionaria            Boolean                  @default(false)
  inspector_fiscal_id               Boolean                  @default(false)
  carpetas_iniciales                Json                     @default("{}")
  plazo_total_concesion             Boolean                  @default(false)
  valor_referencia                  Boolean                  @default(false)
  bip                               Boolean                  @default(false)
  color                             String?                  @db.VarChar(20)
  carpetas                          carpetas[]
  carpetas_transversales            carpetas_transversales[]
  etapas_registro                   etapas_registro[]
}

model tipos_iniciativas {
  id              Int               @id @default(autoincrement())
  nombre          String            @db.VarChar(100)
  etapas_registro etapas_registro[]
}

model tipos_obras {
  id              Int               @id @default(autoincrement())
  nombre          String            @db.VarChar(100)
  etapas_registro etapas_registro[]
}

model regiones {
  id               Int                @id @default(autoincrement())
  codigo           String             @unique @db.VarChar(5)
  nombre           String             @db.VarChar(100)
  nombre_corto     String?            @db.VarChar(50)
  activa           Boolean            @default(true)
  created_at       DateTime           @default(now())
  comunas          comunas[]
  etapas_geografia etapas_geografia[]
  provincias       provincias[]
}

model provincias {
  id               Int                @id @default(autoincrement())
  codigo           String             @unique @db.VarChar(5)
  nombre           String             @db.VarChar(100)
  region_id        Int
  activa           Boolean            @default(true)
  created_at       DateTime           @default(now())
  comunas          comunas[]
  etapas_geografia etapas_geografia[]
  region           regiones           @relation(fields: [region_id], references: [id])
}

model comunas {
  id               Int                @id @default(autoincrement())
  nombre           String             @db.VarChar(100)
  provincia_id     Int
  region_id        Int
  activa           Boolean            @default(true)
  created_at       DateTime           @default(now())
  provincia        provincias         @relation(fields: [provincia_id], references: [id])
  region           regiones           @relation(fields: [region_id], references: [id])
  etapas_geografia etapas_geografia[]
}

model etapas_registro {
  id                                Int                @id @default(autoincrement())
  etapa_tipo_id                     Int
  volumen                           String?
  presupuesto_oficial               String?
  fecha_llamado_licitacion          DateTime?          @db.Date
  fecha_recepcion_ofertas_tecnicas  DateTime?          @db.Date
  fecha_apertura_ofertas_economicas DateTime?          @db.Date
  fecha_inicio_concesion            DateTime?          @db.Date
  decreto_adjudicacion              String?
  sociedad_concesionaria            String?            @db.VarChar(255)
  inspector_fiscal_id               Int?
  usuario_creador                   Int
  fecha_creacion                    DateTime           @default(now())
  fecha_actualizacion               DateTime           @default(now()) @updatedAt
  activa                            Boolean            @default(true)
  tipo_iniciativa_id                Int?
  tipo_obra_id                      Int?
  plazo_total_concesion             String?
  valor_referencia                  String?            @db.VarChar(255)
  proyecto_id                       Int
  bip                               String?
  alertas                           alertas[]
  etapas_geografia                  etapas_geografia[]
  etapa_tipo                        etapas_tipo        @relation(fields: [etapa_tipo_id], references: [id])
  inspector_fiscal                  usuarios?          @relation("InspectorFiscal", fields: [inspector_fiscal_id], references: [id])
  proyecto                          proyectos          @relation(fields: [proyecto_id], references: [id])
  tipo_iniciativa                   tipos_iniciativas? @relation(fields: [tipo_iniciativa_id], references: [id])
  tipo_obra                         tipos_obras?       @relation(fields: [tipo_obra_id], references: [id])
  usuario_creador_rel               usuarios           @relation("UsuarioCreadorEtapa", fields: [usuario_creador], references: [id])
}

model etapas_geografia {
  id                Int             @id @default(autoincrement())
  etapa_registro_id Int
  region_id         Int
  provincia_id      Int
  comuna_id         Int
  created_at        DateTime        @default(now())
  comuna            comunas         @relation(fields: [comuna_id], references: [id])
  etapa_registro    etapas_registro @relation(fields: [etapa_registro_id], references: [id])
  provincia         provincias      @relation(fields: [provincia_id], references: [id])
  region            regiones        @relation(fields: [region_id], references: [id])

  @@unique([etapa_registro_id, region_id, provincia_id, comuna_id])
}

model proyectos {
  id                        Int                     @id @default(autoincrement())
  carpeta_inicial           Json?
  nombre                    String                  @db.VarChar(255)
  division_id               Int?
  departamento_id           Int?
  unidad_id                 Int?
  creado_por                Int
  created_at                DateTime                @default(now())
  carpeta_raiz_id           Int?
  s3_bucket_name            String?                 @db.VarChar(100)
  s3_folder_created         Boolean                 @default(false)
  s3_root_path              String?                 @db.VarChar(500)
  eliminado                 Boolean                 @default(false)
  // Campos para relación padre-hijo
  proyecto_padre_id         Int?
  es_proyecto_padre         Boolean                 @default(false)
  // Relaciones padre-hijo
  proyecto_padre            proyectos?              @relation("ProyectoPadreHijo", fields: [proyecto_padre_id], references: [id])
  proyectos_hijos           proyectos[]             @relation("ProyectoPadreHijo")
  alertas                   alertas[]
  carpetas                  carpetas[]
  concesiones               concesiones[]
  documentos                documentos[]
  etapas_registro           etapas_registro[]
  externos_involucrados     externos_involucrados[]
  fechas_clave              fechas_clave[]
  inspector_fiscal_asignado inspector_fiscal[]
  carpeta_raiz              carpetas?               @relation("ProyectoCarpetaRaiz", fields: [carpeta_raiz_id], references: [id])
  creador                   usuarios                @relation("UsuarioCreador", fields: [creado_por], references: [id])
  departamento              departamentos?          @relation(fields: [departamento_id], references: [id])
  division                  divisiones?             @relation(fields: [division_id], references: [id])
  unidad                    unidades?               @relation(fields: [unidad_id], references: [id])
}

model alertas {
  id                   Int              @id @default(autoincrement())
  proyecto_id          Int?
  concesion_id         Int?
  etapa_registro_id    Int?
  documento_id         String?          @db.Uuid
  tipo_alerta          String           @db.VarChar(50)
  descripcion          String?
  fecha_alerta         DateTime
  fecha_vencimiento    DateTime?
  estado               String           @default("activa") @db.VarChar(30)
  automatica           Boolean          @default(false)
  usuario_creador      Int
  usuario_asignado     Int?
  fecha_creacion       DateTime         @default(now())
  notificacion_enviada Boolean          @default(false)
  activa               Boolean          @default(true)
  concesion            concesiones?     @relation(fields: [concesion_id], references: [id])
  documento            documentos?      @relation(fields: [documento_id], references: [id])
  etapa_registro       etapas_registro? @relation(fields: [etapa_registro_id], references: [id])
  proyecto             proyectos?       @relation(fields: [proyecto_id], references: [id])
  asignado             usuarios?        @relation("UsuarioAsignadoAlerta", fields: [usuario_asignado], references: [id])
  creador              usuarios         @relation("UsuarioCreadorAlerta", fields: [usuario_creador], references: [id])
}

model concesiones {
  id                  Int                   @id @default(autoincrement())
  codigo_concesion    String                @unique @db.VarChar(50)
  proyecto_id         Int
  nombre              String                @db.VarChar(255)
  descripcion         String?
  estado              String?               @db.VarChar(30)
  fecha_inicio        DateTime?             @db.Date
  fecha_termino       DateTime?             @db.Date
  tipo_obra           String?               @db.VarChar(100)
  ubicacion           String?               @db.VarChar(255)
  created_at          DateTime              @default(now())
  alertas             alertas[]
  proyecto            proyectos             @relation(fields: [proyecto_id], references: [id])
  fechas_clave        fechas_clave[]
  obras_concesionadas obras_concesionadas[]
}

model obras_concesionadas {
  id            Int         @id @default(autoincrement())
  concesion_id  Int
  nombre        String      @db.VarChar(255)
  descripcion   String?
  tipo_obra     String?     @db.VarChar(100)
  estado        String?     @db.VarChar(30)
  fecha_inicio  DateTime?   @db.Date
  fecha_termino DateTime?   @db.Date
  ubicacion     String?     @db.VarChar(255)
  presupuesto   Decimal?    @db.Decimal(18, 2)
  concesion     concesiones @relation(fields: [concesion_id], references: [id])
}

model empresas {
  id                    Int                     @id @default(autoincrement())
  rut                   String                  @unique @db.VarChar(12)
  razon_social          String                  @db.VarChar(255)
  nombre_fantasia       String?                 @db.VarChar(255)
  direccion             String?
  telefono              String?                 @db.VarChar(20)
  email                 String?                 @db.VarChar(100)
  representante_legal   String?                 @db.VarChar(255)
  activa                Boolean                 @default(true)
  created_at            DateTime                @default(now())
  externos_involucrados externos_involucrados[]
}

model asesores {
  id                    Int                     @id @default(autoincrement())
  rut                   String                  @unique @db.VarChar(12)
  nombre                String                  @db.VarChar(100)
  apellido              String                  @db.VarChar(100)
  especialidad          String?                 @db.VarChar(100)
  telefono              String?                 @db.VarChar(20)
  email                 String?                 @db.VarChar(100)
  activo                Boolean                 @default(true)
  created_at            DateTime                @default(now())
  externos_involucrados externos_involucrados[]
}

model externos_involucrados {
  id                 Int       @id @default(autoincrement())
  proyecto_id        Int
  empresa_id         Int?
  asesor_id          Int?
  tipo_participacion String    @db.VarChar(50)
  rol                String    @db.VarChar(100)
  fecha_inicio       DateTime? @db.Date
  fecha_termino      DateTime? @db.Date
  activo             Boolean   @default(true)
  asesor             asesores? @relation(fields: [asesor_id], references: [id])
  empresa            empresas? @relation(fields: [empresa_id], references: [id])
  proyecto           proyectos @relation(fields: [proyecto_id], references: [id])
}

model fechas_clave {
  id               Int          @id @default(autoincrement())
  proyecto_id      Int?
  concesion_id     Int?
  tipo_fecha       String       @db.VarChar(50)
  fecha_programada DateTime?    @db.Date
  fecha_real       DateTime?    @db.Date
  descripcion      String?
  es_hito_critico  Boolean      @default(false)
  concesion        concesiones? @relation(fields: [concesion_id], references: [id])
  proyecto         proyectos?   @relation(fields: [proyecto_id], references: [id])
}

model inspector_fiscal {
  id               Int       @id @default(autoincrement())
  proyecto_id      Int
  usuario_id       Int
  fecha_asignacion DateTime? @db.Date
  fecha_termino    DateTime? @db.Date
  activo           Boolean   @default(true)
  observaciones    String?
  proyecto         proyectos @relation(fields: [proyecto_id], references: [id])
  usuario          usuarios  @relation(fields: [usuario_id], references: [id])
}

model registro_documental {
  id                 Int        @id @default(autoincrement())
  documento_id       String     @db.Uuid
  descripcion        String?
  fecha_comprometida DateTime?  @db.Date
  fecha_cumplimiento DateTime?  @db.Date
  cumplido           Boolean    @default(false)
  alerta_30          Boolean    @default(false)
  alerta_15          Boolean    @default(false)
  alerta_5           Boolean    @default(false)
  documento          documentos @relation(fields: [documento_id], references: [id])
}

model carpetas {
  id                       Int                     @id @default(autoincrement())
  nombre                   String                  @db.VarChar(255)
  descripcion              String?
  carpeta_padre_id         Int?
  proyecto_id              Int?
  orden_visualizacion      Int                     @default(0)
  usuario_creador          Int
  fecha_creacion           DateTime                @default(now())
  fecha_actualizacion      DateTime                @default(now()) @updatedAt
  max_tamaño_mb           Int?
  tipos_archivo_permitidos String[]
  activa                   Boolean                 @default(true)
  permisos_escritura       String[]                @default([])
  permisos_lectura         String[]                @default([])
  s3_bucket_name           String?                 @db.VarChar(100)
  s3_created               Boolean                 @default(false)
  s3_path                  String                  @db.VarChar(500)
  etapa_tipo_id            Int?
  carpeta_transversal_id   Int?
  carpeta_padre            carpetas?               @relation("CarpetaHijos", fields: [carpeta_padre_id], references: [id])
  carpetas_hijas           carpetas[]              @relation("CarpetaHijos")
  carpeta_transversal      carpetas_transversales? @relation(fields: [carpeta_transversal_id], references: [id])
  etapa_tipo               etapas_tipo?            @relation(fields: [etapa_tipo_id], references: [id])
  proyecto                 proyectos?              @relation(fields: [proyecto_id], references: [id])
  creador                  usuarios                @relation(fields: [usuario_creador], references: [id])
  carpetas_auditoria       carpetas_auditoria[]
  documentos               documentos[]
  proyectos_carpeta_raiz   proyectos[]             @relation("ProyectoCarpetaRaiz")
}

model documentos {
  id                         String                @id @default(uuid()) @db.Uuid
  nombre_archivo             String                @db.VarChar(255)
  extension                  String?               @db.VarChar(10)
  tipo_mime                  String?               @db.VarChar(100)
  fecha_creacion             DateTime              @default(now())
  usuario_creador            Int
  descripcion                String?
  categoria                  String?               @db.VarChar(100)
  estado                     String?               @db.VarChar(30)
  carpeta_id                 Int
  etiquetas                  String[]
  fecha_ultima_actualizacion DateTime              @default(now()) @updatedAt
  proyecto_id                Int?
  subido_por                 Int
  eliminado                  Boolean               @default(false)
  tipo_documento_id          Int?
  alertas                    alertas[]
  archivo_historial          archivo_historial[]
  carpeta                    carpetas              @relation(fields: [carpeta_id], references: [id])
  proyecto                   proyectos?            @relation(fields: [proyecto_id], references: [id])
  subio_por                  usuarios              @relation("UsuarioSubidor", fields: [subido_por], references: [id])
  tipo_documento             tipos_documentos?     @relation(fields: [tipo_documento_id], references: [id])
  creador                    usuarios              @relation("UsuarioCreador", fields: [usuario_creador], references: [id])
  registro_documental        registro_documental[]
  versiones                  documento_versiones[]
}

model documento_versiones {
  id                Int        @id @default(autoincrement())
  documento_id      String     @db.Uuid
  numero_version    Int
  s3_path           String     @db.VarChar(500)
  s3_bucket_name    String?    @db.VarChar(100)
  tamano             BigInt?
  hash_integridad   String?    @db.VarChar(255)
  comentario        String?
  fecha_creacion    DateTime   @default(now())
  usuario_creador   Int
  metadata          Json?
  activa            Boolean    @default(true)
  
  documento         documentos @relation(fields: [documento_id], references: [id])
  usuario           usuarios   @relation("UsuarioCreadorVersion", fields: [usuario_creador], references: [id])
  
  @@unique([documento_id, numero_version])
  @@index([documento_id])
  @@index([fecha_creacion])
}

model carpetas_auditoria {
  id               Int      @id @default(autoincrement())
  carpeta_id       Int
  usuario_id       Int
  accion           String   @db.VarChar(50)
  detalle_anterior Json?
  detalle_nuevo    Json?
  fecha            DateTime @default(now())
  carpeta          carpetas @relation(fields: [carpeta_id], references: [id])
  usuario          usuarios @relation(fields: [usuario_id], references: [id])
}

model archivo_historial {
  id               Int        @id @default(autoincrement())
  archivo_id       String     @db.Uuid
  usuario_id       Int
  accion           String     @db.VarChar(50)
  descripcion      String?
  fecha            DateTime   @default(now())
  version_anterior String?
  version_nueva    String?
  archivo          documentos @relation(fields: [archivo_id], references: [id])
  usuario          usuarios   @relation(fields: [usuario_id], references: [id])
}

model auditorias {
  id          Int      @id @default(autoincrement())
  usuario_id  Int
  accion      String   @db.VarChar(100)
  entidad     String   @db.VarChar(50)
  entidad_id  Int
  descripcion String?
  fecha       DateTime @default(now())
  usuario     usuarios @relation(fields: [usuario_id], references: [id])
}

model tipos_documentos {
  id                   Int          @id @default(autoincrement())
  nombre               String       @db.VarChar(255)
  descripcion          String?
  requiere_nro_pro_exp Boolean      @default(false)
  requiere_saf_exp     Boolean      @default(false)
  requiere_numerar     Boolean      @default(false)
  requiere_tramitar    Boolean      @default(false)
  activo               Boolean      @default(true)
  created_at           DateTime     @default(now())
  updated_at           DateTime     @default(now()) @updatedAt
  documentos           documentos[]
}

model carpetas_transversales {
  id                  Int          @id @default(autoincrement())
  nombre              String       @db.VarChar(255)
  descripcion         String?
  color               String       @db.VarChar(20)
  orden               Int?
  activa              Boolean      @default(true)
  etapa_tipo_id       Int?
  estructura_carpetas Json?        @default("{}")
  carpetas            carpetas[]
  etapa_tipo          etapas_tipo? @relation(fields: [etapa_tipo_id], references: [id])
}
